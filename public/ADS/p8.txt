#include <stdio.h>
#define MAX_SIZE 100
int front = -1, rear = -1;
int queue[MAX_SIZE];
void enqueue(int element) {
  if ((rear + 1) % MAX_SIZE == front) {
    printf("Queue is full\n");
    return;   }
  if (front == -1) {
    front = 0;
    rear = 0;
  } else {
    rear = (rear + 1) % MAX_SIZE;   }
  queue[rear] = element;  }
int dequeue() {
  if (front == -1) {
    printf("Queue is empty\n");
    return -1;
  }
  int element = queue[front];
  front = (front + 1) % MAX_SIZE;
  if (front == rear) {
    front = -1;
    rear = -1;
  }   return element;  }
void display() {
  if (front == -1) {
    printf("Queue is empty\n");
    return;   }
  int i = front;
  while (i != rear) {
    printf("%d ", queue[i]);
    i = (i + 1) % MAX_SIZE;  }
  printf("%d\n", queue[i]);   }
int main() {
  int choice, element;
  do {
    printf("\nQueue operations:\n");
    printf("1. Enqueue\n");
    printf("2. Dequeue\n");
    printf("3. Display\n");
    printf("4. Exit\n");
    printf("Enter your choice: ");
    scanf("%d", &choice);
    switch (choice) {
      case 1:
        printf("Enter the element to enqueue: ");
        scanf("%d", &element);
        enqueue(element);
        break;
      case 2:
        element = dequeue();
        if (element != -1) {
          printf("Dequeued element: %d\n", element);
        }
        break;
      case 3:
        display();
        break;
      case 4:
        printf("Exiting...\n");
        break;
      default:
        printf("Invalid choice!\n");
    }} while (choice != 4);
  return 0;
}